security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Users
                property: username
                
#        users_in_memory: { memory: null }
    
#        in_database:
#            entity:
#                class: App\Entity\Utilisateurs
#                property: mail    

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        main:
            anonymous: lazy
#            provider: users_in_memory
#            guard:
#                authenticators:
#                    - App\Security\UsersAuthenticator
            logout:
                path: app_logout
                
            guard:
                authenticators:
                    - App\Security\UsersAuthenticator
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/admin, roles: ROLE_USER }
         - { path: ^/profile, roles: ROLE_USER }


    role_hierarchy:
        ROLE_USER:              
        ROLE_EDITOR:      [ ROLE_USER ]
        ROLE_MODERATOR:   [ ROLE_EDITOR ]
        ROLE_ADMIN:       [ ROLE_USER_MOERATOR ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
    
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        App\Entity\Users:
            algorithm: auto    
